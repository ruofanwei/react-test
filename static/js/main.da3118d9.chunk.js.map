{"version":3,"sources":["Redux/slice/orderSlice.js","WebAPI.js","unit.js","Components/CardInfo.js","Components/Card.js","hook/orderHook.js","Components/App.js","Redux/store.js","index.js"],"names":["orderSlice","createSlice","name","initialState","order","reducers","setOrder","state","action","payload","actions","getOrder","setCode","dispatch","fetch","method","headers","then","res","json","selectOrder","Wrapper","styled","div","Photo","img","PhotoIsGray","OrderStatus","ProductName","Status","StatusIsComplete","SendTime","OrderInfo","CardInfo","class","status","code","src","logo","type","date","icon","faAngleRight","Container","Top","TopTitle","Card","useDispatch","orders","useSelector","useEffect","filter","sort","a","b","Date","getTime","map","Title","p","App","configureStore","reducer","orderReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.da3118d9.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getOrder as getOrderAPI } from \"../../WebAPI\";\r\nexport const orderSlice = createSlice({\r\n  name: \"order\",\r\n  initialState: {\r\n    order: {},\r\n  },\r\n  reducers: {\r\n    setOrder: (state, action) => {\r\n      state.order = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setOrder, setCode } = orderSlice.actions;\r\n\r\nexport const getOrder = () => (dispatch) => {\r\n  return getOrderAPI().then((res) => {\r\n    dispatch(setOrder(res));\r\n    return res;\r\n  });\r\n};\r\n\r\nexport const selectOrder = (state) => state.order.order;\r\nexport default orderSlice.reducer;\r\n","import { BASE_URL } from \"./unit\";\n\n// 取得訂單的資訊\nexport const getOrder = () => {\n  return fetch(`${BASE_URL}`, {\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  }).then((res) => res.json());\n};\n","export const BASE_URL = \"http://localhost:3310/orders\";\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  padding: 20px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\nconst Photo = styled.img`\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  object-fit: cover;\r\n`;\r\nconst PhotoIsGray = styled.img`\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  object-fit: cover;\r\n  filter: grayscale(100%);\r\n`;\r\nconst OrderStatus = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  padding: 0 10px 0 10px;\r\n`;\r\nconst ProductName = styled.div`\r\n  color: #555555;\r\n  padding: 0 10px 0 10px;\r\n`;\r\nconst Status = styled.div`\r\n  color: green;\r\n`;\r\nconst StatusIsComplete = styled.div`\r\n  color: #555555;\r\n`;\r\nconst SendTime = styled.div`\r\n  color: black;\r\n`;\r\nconst OrderInfo = styled.div`\r\n  width: 100%;\r\n`;\r\nfunction CardInfo({ order }) {\r\n  return (\r\n    <>\r\n      <Wrapper class=\"card-body\">\r\n        {order.status.code === 1 || order.status.code === 2 ? (\r\n          <Photo src={order.logo}></Photo>\r\n        ) : (\r\n          <PhotoIsGray src={order.logo}></PhotoIsGray>\r\n        )}\r\n        <OrderInfo>\r\n          <OrderStatus>\r\n            {order.status.code === 1 || order.status.code === 2 ? (\r\n              <Status>{order.status.type}</Status>\r\n            ) : (\r\n              <StatusIsComplete>{order.status.type}</StatusIsComplete>\r\n            )}\r\n            <SendTime>預計出貨：{order.date}</SendTime>\r\n          </OrderStatus>\r\n          <ProductName>{order.name}</ProductName>\r\n        </OrderInfo>\r\n        <FontAwesomeIcon icon={faAngleRight} />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardInfo;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useOrder from \"../hook/orderHook\";\r\nimport { getOrder } from \"../Redux/slice/orderSlice.js\";\r\nimport CardInfo from \"./CardInfo\";\r\nconst Container = styled.div`\r\n  max-width: 21rem;\r\n  margin: 50px auto 20px auto;\r\n`;\r\nconst Top = styled.div`\r\n  background-color: #f5f4f4;\r\n  padding: 10px;\r\n`;\r\nconst TopTitle = styled.div`\r\n  border-left: 4px solid green;\r\n  padding-left: 10px;\r\n`;\r\n\r\nfunction Card() {\r\n  const dispatch = useDispatch();\r\n  const { orders } = useOrder();\r\n  useEffect(() => {\r\n    dispatch(getOrder());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Container class=\"card border-light mb-3\">\r\n        <Top class=\"card-header \">\r\n          <TopTitle>進行中</TopTitle>\r\n        </Top>\r\n        {orders &&\r\n          orders\r\n            .filter((order) => {\r\n              return order.status.code === 1 || order.status.code === 2;\r\n            })\r\n            .sort((a, b) => {\r\n              return new Date(b.date).getTime() - new Date(a.date).getTime();\r\n            })\r\n            .map((order) => <CardInfo order={order} />)}\r\n        <Top class=\"card-header \">\r\n          <TopTitle>已完成</TopTitle>\r\n        </Top>\r\n\r\n        {orders &&\r\n          orders\r\n            .filter((order) => {\r\n              return order.status.code === 3 || order.status.code === 4;\r\n            })\r\n            .sort((a, b) => {\r\n              return new Date(b.date).getTime() - new Date(a.date).getTime();\r\n            })\r\n            .map((order) => <CardInfo order={order} />)}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import { useSelector } from \"react-redux\";\n\nimport { selectOrder } from \"../Redux/slice/orderSlice\";\nexport default function useOrder() {\n  const orders = useSelector(selectOrder);\n\n  return { orders };\n}\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Card from \"./Card\";\r\nconst Title = styled.p`\r\n  margin: 0 auto;\r\n  font-size: 36px;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Title class=\"navbar-brand\">Demo</Title>\r\n      </nav>\r\n      <Card />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport orderReducer from \"./slice/orderSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    order: orderReducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./Components/App\";\r\nimport store from \"./Redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"bootswatch/dist/minty/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}